---
- name: install some apt-get packages before installing docker
  apt:
    update_cache: true
    force_apt_get: true
    name: "{{ pre_packages_before_docker }}"
    state: present

- name: check if docker's official GPG key has existed
  shell: |
    install -m 0755 -d /etc/apt/keyrings
    ls -la /etc/apt/keyrings | grep docker.gpg | cat
  ignore_errors: false
  register: key_existence
# - debug:
#     var: key_existence.stdout_lines

- block:
    - name: add docker's official GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg
      ignore_errors: false
      
    - name: setup docker repository
      shell: |
        echo \
        "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
        tee /etc/apt/sources.list.d/docker.list
      ignore_errors: false
  when: key_existence.stdout == "" 

- name: install docker engine, containerd, and docker compose
  apt:
    update_cache: true
    force_apt_get: true
    name: "{{ docker_packages }}"
    state: present

- name: verify docker engine installation by running the 'hello-world' image
  shell: |
    systemctl restart docker
    docker run hello-world
  ignore_errors: false
  register: general_output
- debug:
    var: general_output.stdout_lines